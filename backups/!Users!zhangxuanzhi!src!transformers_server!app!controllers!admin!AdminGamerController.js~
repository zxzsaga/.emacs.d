'use strict';

var AdminBaseController = require('./AdminBaseController');

function AdminGamerController() {
    AdminGamerController.super_.call(this);
    var self = this;

    var GamerDAO = app.GamerDAO;

    this.action('admin/gamer/index', function(req, res, cb) {
        res.render('gamer/index.jade');
    });

    this.action('admin/gamer/show', function(req, res, cb) {
        GamerDAO.findOneByGamerId(req.params._id, function(err, foundDoc) {
            if (foundDoc != null) {
                res.render('gamer/show.jade', { foundDoc: JSON.stringify(foundDoc.doc, null, "    "), _id: foundDoc._id });
            }
            return cb();
        });    
    });

    this.action('admin/gamer/search', function(req, res, cb) {
        GamerDAO.findOneByServerIdMobageId(req.param('serverId'), req.param('mobageId'), function(err, foundDoc) {
            if (foundDoc != null) {
                res.render('gamer/index.jade', { gamers: [foundDoc] });
            }
            else {
                res.render('gamer/index.jade', { searchStatus: "Gamer doesn't exist" });
            }
            return cb();
        });
    });

    this.action('admin/gamer/reward', function(req, res, cb) {
        var updates = { $inc: {} };
        if (req.param('coin') > 0) {
            updates.$inc.coin = parseInt(req.param('coin'));
        }
        var ticketString = '';
        if (req.param('freeTicket') > 0) {
            ticketString = 'ticket.free';
            updates.$inc[ticketString] = parseInt(req.param('freeTicket'));
        }
        if (req.param('payTicket') > 0) {
            ticketString = 'ticket.pay';
            updates.$inc[ticketString] = parseInt(req.param('payTicket'));
        }
        var _ids = req.param('_ids').split(';');
        for (var i in _ids) {
            GamerDAO.updateById(_ids[i], updates, function(err) {
                if (err) {
                    // TODO: show when err; who update success;
                    console.log(err);
                }
            });
        }
        res.redirect('/admin/gamer/index');
        return cb();
    });
};

util.inherits(AdminGamerController, AdminBaseController);

var ctr = new AdminGamerController();

exports.routes = {
    GET: {
        '/admin/gamer/index': ctr.action('admin/gamer/index'),
        '/admin/gamer/show/:_id': ctr.action('admin/gamer/show')
    },
    POST: {
        '/admin/gamer/search': ctr.action('admin/gamer/search'),
        '/admin/gamer/reward': ctr.action('admin/gamer/reward')
    }
};
