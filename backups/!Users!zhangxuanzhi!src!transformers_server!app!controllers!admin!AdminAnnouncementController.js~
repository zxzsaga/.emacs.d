'use strict';

var AdminBaseController = require('./AdminBaseController');
var Announcement = require('../../models/Announcement');

function AdminAnnouncementController() {
    AdminAnnouncementController.super_.call(this);
    var self = this;

    this.action('admin/announcement/index', function(req, res, cb) {
        app.AnnouncementDAO.find({}, function(err, foundDocs) {
            res.render('announcement/index.jade',
                       {
                           announcements: foundDocs,
                           linkTable: Announcement.link
                       }
                      );
            return cb();
        });
    });

    this.action('admin/announcement/new', function(req, res, cb) {
        res.render('announcement/new.jade',
                   {
                       announcement: {},
                       linkTable: Announcement.link
                   }
                  );
    });

    this.action('admin/announcement/update', function(req, res, cb) {
	app.AnnouncementDAO.findOne({ _id: parseInt(req.params.id) }, function(err, foundDoc) {
	    res.render('announcement/update.jade',
                       {
                           announcement: foundDoc,
                           linkTable: Announcement.link
                       }
                      );
            return cb();
	});
    });

    this.action('admin/announcement/destroy', function(req, res, cb) {
        app.AnnouncementDAO.remove({ _id: parseInt(req.params.id) }, function(err) {
            if (err) {
                console.log(err);
            }
            res.redirect('/admin/announcement/index');
        });
        return cb();
    });

    this.action('admin/announcement/create', function(req, res, cb) {
        var date = new Date();
        var announcement = {
            _id: parseInt(req.param('id')),
            serverId: parseInt(req.param('serverId')),
            title: req.param('title'),
            content: req.param('content'),
            sort: parseInt(req.param('sort')),
            createdAt: date.toISOString(),
            link: parseInt(req.param('link')),
            show: parseInt(req.param('show')),
            broadcast: parseInt(req.param('broadcast')),
            hot: parseInt(req.param('hot'))
        };
        app.AnnouncementDAO.addOne(announcement, function(err, insertedDoc) {
            if (err) {
                console.log(err);
            }
            else {
                res.redirect('/admin/announcement/index');
            }
            return cb();
        });
    });

    this.action('admin/announcement/doUpdate', function(req, res, cb) {
	app.AnnouncementDAO.findOne({ _id: parseInt(req.param('id')) }, function(err, foundDoc) {
            if (err) {
                console.log(err);
            }
            else {
                foundDoc.serverId = parseInt(req.param('serverId'));
                foundDoc.title = req.param('title');
                foundDoc.content = req.param('content');
                foundDoc.sort = parseInt(req.param('sort'));
                foundDoc.link = parseInt(req.param('link'));
                foundDoc.show = parseInt(req.param('show'));
                foundDoc.broadcast = parseInt(req.param('broadcast'));
                foundDoc.hot = parseInt(req.param('hot'));
                app.AnnouncementDAO.update({ _id: parseInt(req.param('id')) }, foundDoc, function(err, updatedDoc) {
                    if (err) {
                        console.log(err)
                    }
                    else {
                        res.redirect('/admin/announcement/index');
                        return cb();
                    }
                });
            }
        });
    });
};

util.inherits(AdminAnnouncementController, AdminBaseController);

var ctr = new AdminAnnouncementController();

exports.routes = {
    GET: {
        '/admin/announcement/index': ctr.action('admin/announcement/index'),
        '/admin/announcement/new': ctr.action('admin/announcement/new'),
        '/admin/announcement/update/:id': ctr.action('admin/announcement/update'),
        '/admin/announcement/destroy/:id': ctr.action('admin/announcement/destroy')
    },
    POST: {
        '/admin/announcement/create': ctr.action('admin/announcement/create'),
        '/admin/announcement/doUpdate': ctr.action('admin/announcement/doUpdate'),
        '/admin/announcement/remove': ctr.action('admin/announcement/remove')
    }
};
